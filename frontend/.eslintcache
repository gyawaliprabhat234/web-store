[{"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\index.js":"1","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\reportWebVitals.js":"2","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\App.js":"3","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\store.js":"4","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Navbar.js":"5","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\reducers\\cartReducers.js":"6","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\reducers\\productReducers.js":"7","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Product.js":"8","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\CartItem.js":"9","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\actions\\cartActions.js":"10","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\actions\\productActions.js":"11","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\constants\\productConstants.js":"12","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\constants\\cartConstants.js":"13","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Spinner.js":"14","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\AlertDanger.js":"15","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\HomePage.js":"16","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\ProductPage.js":"17","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\CartPage.js":"18","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\PersonalInformationPage.js":"19","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\PaymentPage.js":"20","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Validate.js":"21","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\validations\\UserForm.js":"22","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\validations\\PaymentForm.js":"23","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\OrderDetailsPage.js":"24","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\reducers\\orderReducers.js":"25","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\constants\\orderConstants.js":"26","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\Orders.js":"27","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\actions\\orderActions.js":"28","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\OrderHistoryDetails.js":"29","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\AddProducts.js":"30","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\validations\\ProductForm.js":"31","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\Search.js":"32"},{"size":654,"mtime":1626312506872,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1624078098000,"results":"35","hashOfConfig":"34"},{"size":1537,"mtime":1626311254547,"results":"36","hashOfConfig":"34"},{"size":994,"mtime":1626278027434,"results":"37","hashOfConfig":"34"},{"size":1583,"mtime":1626312131921,"results":"38","hashOfConfig":"34"},{"size":984,"mtime":1626291375033,"results":"39","hashOfConfig":"34"},{"size":1150,"mtime":1624078098000,"results":"40","hashOfConfig":"34"},{"size":898,"mtime":1626292443693,"results":"41","hashOfConfig":"34"},{"size":1762,"mtime":1626275401170,"results":"42","hashOfConfig":"34"},{"size":962,"mtime":1626291505279,"results":"43","hashOfConfig":"34"},{"size":1315,"mtime":1626242964124,"results":"44","hashOfConfig":"34"},{"size":461,"mtime":1624078098000,"results":"45","hashOfConfig":"34"},{"size":194,"mtime":1626291327730,"results":"46","hashOfConfig":"34"},{"size":1045,"mtime":1626236311422,"results":"47","hashOfConfig":"34"},{"size":241,"mtime":1626236679957,"results":"48","hashOfConfig":"34"},{"size":1071,"mtime":1626321346683,"results":"49","hashOfConfig":"34"},{"size":2850,"mtime":1626315888915,"results":"50","hashOfConfig":"34"},{"size":2938,"mtime":1626315888888,"results":"51","hashOfConfig":"34"},{"size":4365,"mtime":1626285176464,"results":"52","hashOfConfig":"34"},{"size":3895,"mtime":1626276024312,"results":"53","hashOfConfig":"34"},{"size":384,"mtime":1626267587262,"results":"54","hashOfConfig":"34"},{"size":988,"mtime":1626272904925,"results":"55","hashOfConfig":"34"},{"size":1560,"mtime":1626291837785,"results":"56","hashOfConfig":"34"},{"size":5918,"mtime":1626291531378,"results":"57","hashOfConfig":"34"},{"size":1163,"mtime":1626281707809,"results":"58","hashOfConfig":"34"},{"size":441,"mtime":1626277578686,"results":"59","hashOfConfig":"34"},{"size":2197,"mtime":1626280007672,"results":"60","hashOfConfig":"34"},{"size":1324,"mtime":1626277792671,"results":"61","hashOfConfig":"34"},{"size":7947,"mtime":1626321919529,"results":"62","hashOfConfig":"34"},{"size":8270,"mtime":1626317647743,"results":"63","hashOfConfig":"34"},{"size":979,"mtime":1626285220755,"results":"64","hashOfConfig":"34"},{"size":1673,"mtime":1626312084280,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"s9y991",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\index.js",["140"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\n\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["141","142"],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\reportWebVitals.js",[],["143","144"],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\App.js",["145"],"import \"./App.css\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"./components/Navbar\";\n\n// Pages\nimport HomePage from \"./pages/HomePage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport CartPage from \"./pages/CartPage\";\nimport { UserInformation } from \"./pages/PersonalInformationPage\";\nimport { PaymentPage } from \"./pages/PaymentPage\";\nimport OrderDetailsPage from \"./pages/OrderDetailsPage\";\nimport{AddProductPage} from \"./pages/AddProducts\";\nimport {OrderHistoryDetails} from \"./pages/OrderHistoryDetails\"\nimport { Orders } from \"./pages/Orders\";\nimport Search from \"./pages/Search\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <Navbar  />\n      <main className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/product/:id\" component={ProductPage} />\n          <Route exact path=\"/addproduct\" component={AddProductPage} />\n          <Route exact path=\"/order/:id\" component={OrderHistoryDetails} />\n          <Route exact path=\"/cart\" component={CartPage} />\n          <Route exact path=\"/user\" component={UserInformation} />\n          <Route exact path=\"/payment\" component={PaymentPage} />\n          <Route exact path=\"/orders\" component={Orders} />\n          <Route exact path=\"/orderdetails\" component={OrderDetailsPage} />\n          <Route exact path=\"/search\" component={Search} />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\store.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Navbar.js",["146"],"import { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst Navbar = () => {\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  const getCartCount = () => {\n    return cartItems.reduce((quantity, item) => Number(item.quantity) + quantity, 0);\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\">WEB STORE</a>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link id=\"linkToProducts\" className=\"nav-link active\" to=\"/\">Products</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link id=\"linkToSearch\" className=\"nav-link active\" to=\"/search\">Search</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link id=\"linkToOrders\" className=\"nav-link active\" to=\"/orders\">Orders</Link>\n            </li>\n            <li id=\"linkToAddProduct\" className=\"nav-item\">\n              <Link className=\"nav-link active\" to=\"/addproduct\">Add Product</Link>\n            </li>\n\n\n          </ul>\n          <Link id=\"linkToCart\" to=\"/cart\" className=\"navbar-brand\">\n            <i className=\"fas fa-shopping-cart\"></i>\n            <span>\n              Cart <span style={{ color: \"yellow\" }} className=\"navbar-brand\">{getCartCount()}</span>\n            </span>\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\reducers\\cartReducers.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\reducers\\productReducers.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Product.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\CartItem.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\actions\\cartActions.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\actions\\productActions.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\constants\\productConstants.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\constants\\cartConstants.js",[],["147","148"],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Spinner.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\AlertDanger.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\HomePage.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\ProductPage.js",["149"],"import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Actions\nimport { getProductDetails } from \"../redux/actions/productActions\";\nimport { addToCart } from \"../redux/actions/cartActions\";\nimport { Spinner } from \"../components/Spinner\";\nimport { AlertDanger } from \"../components/AlertDanger\";\n\nconst ProductPage = ({ match, history }) => {\n  const [quantity, setQuantity] = useState(1);\n  const dispatch = useDispatch();\n\n\n  const productDetails = useSelector((state) => state.getProductDetails);\n  const { loading, error, product } = productDetails;\n\n  useEffect(() => {\n    if (product && match.params.id !== product.productNumber) {\n      dispatch(getProductDetails(match.params.id));\n    }\n  }, [dispatch, match, product]);\n\n  const addToCartHandler = () => {\n    dispatch(addToCart(product.productNumber, quantity));\n    history.push(`/cart`);\n  };\n  return (\n    <div>\n      <br></br>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n       <AlertDanger message={error} />\n      ) : (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-6 col-sm-8\">\n            <div className=\"card\">\n              <div class=\"card-header bg-dark text-white text-center\">\n                <h3 className=\"card-title\">{product.name}</h3>\n              </div>\n              <div className=\"card-body\">\n                <h5 className={\"card-text\"} >Price: ${product.price}</h5>\n                <hr />\n                <p className={\"card-text\"}>\n                  Status: {\"       \"}\n                  <span>\n                    {product.numberInStock > 0 ? \" In Stock(\"+product.numberInStock+\")\" : \" Out of Stock\"}\n                  </span>\n                </p>\n                <hr />\n                <div class=\"input-group mb-3\">\n                  <span class=\"input-group-text\" id=\"basic-addon3\">Quantity</span>\n                  <select id=\"productQuantity\" className=\"form-select\" value={quantity} onChange={(e) => setQuantity(e.target.value)}>\n                    {[...Array(product.numberInStock).keys()].map((x) => (\n                      <option key={x + 1} value={x + 1}>\n                        {x + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <hr />\n\n                <p className=\"card-text\">{product.description}</p>\n\n              </div>\n              <div className=\"card-footer\">\n                <div class=\"d-grid gap-2\">\n                  <button id=\"addToCart\" className=\"btn btn-primary\" disabled={product.numberInStock == 0}  onClick={addToCartHandler}>\n                    Add To Cart\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductPage;\n","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\CartPage.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\PersonalInformationPage.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\PaymentPage.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\components\\Validate.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\validations\\UserForm.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\validations\\PaymentForm.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\OrderDetailsPage.js",["150"],"import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { removeAllFromCart } from \"../redux/actions/cartActions\";\r\n\r\n// Actions\r\n\r\nconst OrderDetailsPage = (props) => {\r\n    const { user, payment } = props.location.state;\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((quantity, item) => Number(item.quantity) + quantity, 0);\r\n    };\r\n\r\n    const getCartSubTotal = () => {\r\n        return cartItems\r\n            .reduce((price, item) => price + item.price * item.quantity, 0)\r\n            .toFixed(2);\r\n    };\r\n\r\n    const comfirmOrder = () => {\r\n        let orderedProducts = [];\r\n        cartItems.forEach(items => {\r\n            let orderedProduct = {\r\n                product: {\r\n                    productNumber: items.productNumber,\r\n                    name: items.name,\r\n                    description: items.description,\r\n                    price: items.price,\r\n                    numberInStock: items.numberInStock\r\n                },\r\n                quantity: parseInt(items.quantity)\r\n            }\r\n            orderedProducts.push(orderedProduct);\r\n\r\n        });\r\n        let data= {\r\n            owner: user,\r\n            payment: payment,\r\n            orderedProducts: orderedProducts\r\n        }\r\n        console.log(data);\r\n        axios.post(\"http://localhost:8080/orders\", data).then(response=>{\r\n            if(response.status===200){\r\n                dispatch(removeAllFromCart());\r\n                props.history.push(\"/order/\"+ response.data.orderId);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br></br>\r\n            <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-lg-9\">\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div class=\"col-lg-5 col-md-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h4>User Information</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Name <span style={{ float: \"right\" }}>{user.name}</span></li>\r\n                                        <li className=\"list-group-item\">Email <span style={{ float: \"right\" }}>{user.email}</span></li>\r\n                                        <li className=\"list-group-item\">Phone <span style={{ float: \"right\" }}>{user.phone}</span></li>\r\n                                        <li className=\"list-group-item\">Address <span style={{ float: \"right\" }}>{user.city}, {user.street}, {user.zip}</span></li>\r\n                                        <li className=\"list-group-item\"><b>Payment</b></li>\r\n                                        <li className=\"list-group-item\">Card Type <span style={{ float: \"right\" }}>{payment.creditCardType}</span></li>\r\n                                        <li className=\"list-group-item\">Card Number <span style={{ float: \"right\" }}>{payment.number}</span></li>\r\n                                        <li className=\"list-group-item\">Expiry Date <span style={{ float: \"right\" }}>{payment.validDate}</span></li>\r\n\r\n\r\n                                    </ul>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-7 col-md-7\">\r\n\r\n\r\n                            {cartItems.length === 0 ? (\r\n                                <div>\r\n                                    Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n                                </div>\r\n                            ) : (<>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Product Name</th>\r\n                                            <th>Unit Price</th>\r\n                                            <th>Quantity</th>\r\n                                            <th>Price</th>\r\n                                        </tr>\r\n\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {cartItems.map((item) => (\r\n                                            <tr key={item.productNumber}>\r\n                                                <td>{item.name}</td>\r\n                                                <td>${item.price}</td>\r\n                                                <td>{item.quantity}</td>\r\n                                                <td>${item.quantity * item.price}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                            <th colSpan={3}>Total Price</th>\r\n                                            <th>${getCartSubTotal()}</th>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </>\r\n                            )}\r\n                            <div class=\"d-grid gap-2\">\r\n                                <button disabled={getCartCount() === 0} onClick={comfirmOrder} className=\"btn btn-sm btn-primary\">Confirm Order</button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderDetailsPage;\r\n","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\reducers\\orderReducers.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\constants\\orderConstants.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\Orders.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\redux\\actions\\orderActions.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\OrderHistoryDetails.js",["151","152"],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { AlertDanger } from \"../components/AlertDanger\";\r\nimport { Spinner } from \"../components/Spinner\";\r\nimport { getOrderDetails } from \"../redux/actions/orderActions\";\r\n\r\n\r\nexport const OrderHistoryDetails = ({ match, history }) => {\r\n    const orderDetails = useSelector((state) => state.getOrderDetails);\r\n    const dispatch = useDispatch();\r\n    const { loading, error, order } = orderDetails;\r\n    const [status, setStatus] = useState();\r\n    let user = {};\r\n    let payment = {}\r\n    let orderedProducts = [];\r\n\r\n    useEffect(() => {\r\n        if (order && match.params.id != order.orderId) {\r\n            dispatch(getOrderDetails(match.params.id));\r\n        }\r\n    }, [dispatch, match, order]);\r\n\r\n    if (loading === false && !error) {\r\n        if (order && order.length !== 0) {\r\n            user = order.owner;\r\n            payment = order.payment;\r\n            orderedProducts = order.orderedProducts;\r\n            // setStatus(order.status);\r\n        }\r\n    }\r\n    const getTotalPrice = () => {\r\n        return orderedProducts.reduce((quantity, item) => Number(item.quantity) * Number(item.product.price) + quantity, 0);\r\n    }\r\n\r\n    const handleStatusChanged = (e) => {\r\n        const url = \"http://localhost:8080\";\r\n        axios.put(url + `/orders/${order.orderId}/status?status=` + e.target.value)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    setStatus(e.target.value);\r\n                    history.push(\"/orders\");\r\n                } else {\r\n                    alert(\"error\");\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        const url = \"http://localhost:8080\";\r\n        axios.delete(url + `/orders/${order.orderId}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    Swal.fire({\r\n                        title: 'DELETED',\r\n                        text: 'Successfully deleted',\r\n                        icon: 'success'\r\n                      })\r\n                    history.push(\"/orders\");\r\n                } else {\r\n                    alert(response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        loading ? (\r\n            <Spinner />\r\n        ) : error ? (\r\n            <AlertDanger message={error} />\r\n        ) : (\r\n            <>\r\n                <br></br>\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-lg-9\">\r\n\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div class=\"col-lg-5 col-md-5\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <h4>User Information</h4>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <ul className=\"list-group list-group-flush\">\r\n                                            <li className=\"list-group-item\">Name <span style={{ float: \"right\" }}>{user.name}</span></li>\r\n                                            <li className=\"list-group-item\">Email <span style={{ float: \"right\" }}>{user.email}</span></li>\r\n                                            <li className=\"list-group-item\">Phone <span style={{ float: \"right\" }}>{user.phone}</span></li>\r\n                                            <li className=\"list-group-item\">Address <span style={{ float: \"right\" }}>{user.city}, {user.street}, {user.zip}</span></li>\r\n                                            <li className=\"list-group-item\"><b>Payment</b></li>\r\n                                            <li className=\"list-group-item\">Card Type <span style={{ float: \"right\" }}>{payment.creditCardType}</span></li>\r\n                                            <li className=\"list-group-item\">Card Number <span style={{ float: \"right\" }}>{payment.number}</span></li>\r\n                                            <li className=\"list-group-item\">Expiry Date <span style={{ float: \"right\" }}>{payment.validDate}</span></li>\r\n\r\n\r\n                                        </ul>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-7 col-md-7\">\r\n\r\n                                {orderedProducts.length === 0 ? (\r\n                                    <div>\r\n                                        Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n                                    </div>\r\n                                ) : (<>\r\n                                    <div className=\"row\">\r\n                                        <div class=\"col-lg-1 col-md-1\">Status:</div>\r\n\r\n\r\n                                        <div className=\"col-lg-4 col-md-4\">\r\n                                            <select type=\"text\" value={order.status} class=\"form-select\" id=\"orderStatus\" name=\"orderStatus\" onChange={handleStatusChanged} >\r\n                                                <option value=\"PLACED\">PLACED</option>\r\n                                                <option value=\"SHIPPED\">SHIPPED</option>\r\n                                                <option value=\"DELIVERED\">DELIVERED</option>\r\n                                            </select>\r\n                                            <br />\r\n                                        </div>\r\n                                        <div className=\"col-lg-6 col-md-6 \">\r\n                                            <div class=\"d-grid gap-2\">\r\n                                                <button className=\"btn btn-danger\" onClick={handleOnDelete}>Delete Order</button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Product Name</th>\r\n                                                <th>Unit Price</th>\r\n                                                <th>Quantity</th>\r\n                                                <th>Price</th>\r\n                                            </tr>\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {orderedProducts.map((item) => (\r\n                                                <tr key={item.product.productNumber}>\r\n                                                    <td>{item.product.name}</td>\r\n                                                    <td>${item.product.price}</td>\r\n                                                    <td>{item.quantity}</td>\r\n                                                    <td>${item.quantity * item.product.price}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                            <tr>\r\n                                                <th colSpan={3}>Total Price</th>\r\n                                                <th>${getTotalPrice()}</th>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </>\r\n                                )}\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        ));\r\n};\r\n\r\n","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\AddProducts.js",["153","154"],"import axios from \"axios\";\r\nimport { useState } from \"react\"\r\nimport { Validate } from \"../components/Validate\";\r\nimport { ProductFormValidate } from \"./validations/ProductForm\";\r\nimport { getProducts as listProducts } from \"../redux/actions/productActions\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const AddProductPage = () => {\r\n    const cleanUp = { productNumber: \"\", name: \"\", price: \"\", numberInStock: \"\", description: \"\" }\r\n    const [product, setProduct] = useState(cleanUp);\r\n    const handleOnChange = (e) => setProduct({ ...product, [e.target.name]: e.target.value });\r\n    const [errorMessage, setErrorMessage] = useState({ isValid: false, errors: {} });\r\n    const dispatch = useDispatch();\r\n\r\n    const getProducts = useSelector((state) => state.getProducts);\r\n    const { products, loading, error } = getProducts;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch]);\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n        const { isValid, errors } = ProductFormValidate(product);\r\n        if (!isValid) {\r\n            setErrorMessage({ isValid, errors });\r\n            return;\r\n        }\r\n        setErrorMessage({ isValid: false, errors: [] });\r\n        const url = `http://localhost:8080/products?productNumber=${product.productNumber}&price=${product.price}&name=${product.name}&description=${product.description}&numberInStock=${product.numberInStock}&operation=addnew`;\r\n        axios.post(url, product).then(response => {\r\n            if (response.status === 200) {\r\n                Swal.fire({\r\n                    title: 'Success',\r\n                    text: 'Successfully created',\r\n                    icon: 'success'\r\n                  })\r\n                setProduct(cleanUp);\r\n                dispatch(listProducts());\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDelete = (e)=>{\r\n        const url = `http://localhost:8080/products/${e.target.value}`;\r\n        axios.delete(url).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(listProducts());\r\n                Swal.fire({\r\n                    title: 'DELETED',\r\n                    text: 'Successfully deleted',\r\n                    icon: 'success'\r\n                  })\r\n            }\r\n        })\r\n    }\r\n    const handleDecreaseStock = (e)=>{\r\n        const url = `http://localhost:8080/products?productNumber=${e.target.value}&numberInStock=1&operation=decreaseStock`;\r\n        axios.post(url).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(listProducts());\r\n            }else{\r\n                alert(response.data.message);\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            alert(err.response.data?err.response.data.message: err);\r\n        })\r\n    }\r\n    const handleIncreaseStock = (e)=>{\r\n        const url = `http://localhost:8080/products?productNumber=${e.target.value}&numberInStock=1&operation=increaseStock`;\r\n        axios.post(url).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(listProducts());\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Product Form</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"mb-3\">\r\n                            <label for=\"name\" className=\"form-label\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\" value={product.name} name=\"name\" onChange={handleOnChange} />\r\n                            <div className=\"form-text text-danger\">\r\n                                <Validate field=\"name\" errorMessage={errorMessage} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label for=\"productNumber\" className=\"form-label\">Product Number</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"productNumber\" value={product.productNumber} onChange={handleOnChange} id=\"productNumber\" />\r\n                            <div className=\"form-text text-danger\">\r\n                                <Validate field=\"productNumber\" errorMessage={errorMessage} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label for=\"price\" className=\"form-label\">Price</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"price\" value={product.price} name=\"price\" onChange={handleOnChange} />\r\n                            <div className=\"form-text text-danger\">\r\n                                <Validate field=\"price\" errorMessage={errorMessage} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label for=\"numberInStock\" className=\"form-label\">Number In Stock</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"numberInStock\" value={product.numberInStock} name=\"numberInStock\" onChange={handleOnChange} />\r\n                            <div className=\"form-text text-danger\">\r\n                                <Validate field=\"numberInStock\" errorMessage={errorMessage} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label for=\"description\" className=\"form-label\">Description</label>\r\n                            <textarea type=\"text\" rows={5} className=\"form-control\" id=\"description\" value={product.description} name=\"description\" onChange={handleOnChange} />\r\n                            <div className=\"form-text text-danger\">\r\n                                <Validate field=\"description\" errorMessage={errorMessage} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button onClick={handleSubmit} id=\"addProduct\" className=\"btn btn-sm btn-primary\">Add Product</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {products?(\r\n            <div className=\"col-md-6\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                            <th>In Stock</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map((item) => (\r\n                            <tr  key={item.productNumber}>\r\n                                <td>{item.productNumber}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>${item.price}</td>\r\n                                <td>\r\n                                    \r\n                                    &nbsp; <button value={item.productNumber} onClick={handleIncreaseStock} className=\"btn btn-sm btn-success\">+</button>\r\n                                    &nbsp; <button  className=\"btn btn-primary\"><b>{item.numberInStock}</b></button>\r\n                                    &nbsp; <button value={item.productNumber} onClick={handleDecreaseStock} className=\"btn btn-sm btn-danger\">-</button>\r\n                                </td>\r\n                                <td>\r\n                                    <button id={\"btnDelete_\"+item.productNumber} className=\"btn btn-danger\" value={item.productNumber} onClick={handleDelete}>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            ):(<></>)}\r\n        </div>\r\n\r\n    );\r\n\r\n}","E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\validations\\ProductForm.js",[],"E:\\WAA\\Project\\mini-mern-ecommerce-project-master\\mini-mern-ecommerce-project-master\\frontend\\src\\pages\\Search.js",[],{"ruleId":"155","severity":1,"message":"156","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":12},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"155","severity":1,"message":"165","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":15,"column":9,"nodeType":"168","endLine":15,"endColumn":37},{"ruleId":"159","replacedBy":"169"},{"ruleId":"161","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":69,"column":87,"nodeType":"173","messageId":"174","endLine":69,"endColumn":89},{"ruleId":"155","severity":1,"message":"175","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":19},{"ruleId":"155","severity":1,"message":"176","line":16,"column":12,"nodeType":"157","messageId":"158","endLine":16,"endColumn":18},{"ruleId":"171","severity":1,"message":"177","line":22,"column":38,"nodeType":"173","messageId":"174","endLine":22,"endColumn":40},{"ruleId":"155","severity":1,"message":"178","line":19,"column":23,"nodeType":"157","messageId":"158","endLine":19,"endColumn":30},{"ruleId":"155","severity":1,"message":"179","line":19,"column":32,"nodeType":"157","messageId":"158","endLine":19,"endColumn":37},"no-unused-vars","'Swal' is defined but never used.","Identifier","unusedVar","no-native-reassign",["180"],"no-negated-in-lhs",["181"],["180"],["181"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["180"],["181"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'status' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]